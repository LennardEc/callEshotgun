library(CallEshotgun)
newX <-callEshotgun(Xtr, Ytr, c(-5.12), c(5.12), 10L, 0.2)
testthat::expect_equal(
nrow(newX), nrow(Xtr)
)
Xtr <- matrix(runif(20),ncol=1)
Ytr <- sphere(Xtr)
#working
newX <-callEshotgun(Xtr, Ytr, c(-5.12), c(5.12), 10L, 0.2)
testthat::expect_equal(
nrow(newX), nrow(Xtr)
)
Xtr <- matrix(runif(20),ncol=1)
Ytr <- sphere(Xtr)
newX <-callEshotgun(Xtr, Ytr, c(-5.12), c(5.12), 10L, 0.2)
Xtr <- matrix(runif(20),ncol=1)
Ytr <- sphere(Xtr)
#working
newX <-callEshotgun(Xtr, Ytr, c(-5.12), c(5.12), 10L, 0.2)
testthat::expect_equal(
ncol(newX), ncol(Xtr)
)
Xtr <- matrix(runif(20),ncol=1)
Ytr <- sphere(Xtr)
#working
newX <-callEshotgun(Xtr, Ytr, c(-5.12), c(5.12), 10L, 0.2)
testthat::expect_equal(
ncol(newX), ncol(Xtr)
)
#10 points get evaluaded
testthat::expect_equal(
nrow(newX), nrow(Xtr) + 10
)
Xtr <- matrix(runif(20),ncol=1)
Ytr <- sphere(Xtr)
#working
newX <-callEshotgun(Xtr, Ytr, c(-5.12), c(5.12), 10L, 0.2)
testthat::expect_equal(
ncol(newX), ncol(Xtr)
)
#10 points get evaluaded
testthat::expect_equal(
nrow(newX)+ 10 , nrow(Xtr)
)
Xtr <- matrix(runif(20),ncol=2)
Ytr <- modifiedLevy(Xtr)
#working
newX <- callEshotgun(Xtr, Ytr, c(-5,-1), c(5,1), 20L, 0.1)
testthat::expect_equal(
nrow(newX),
nrow(Xtr)
)
#working
testthat::expect_equal(
ncol(newX),
ncol(Xtr)
)
Xtr <- matrix(runif(20),ncol=2)
Ytr <- modifiedLevy(Xtr)
newX <- callEshotgun(Xtr, Ytr, c(-5,-1), c(5,1), 20L, 0.1)
Xtr <- matrix(runif(20),ncol=2)
Ytr <- modifiedLevy(Xtr)
Xtr <- matrix(runif(20),ncol=1)
Ytr <- sphere(Xtr)
Xtr <- matrix(runif(20),ncol=2)
Ytr <- modifiedLevy(Xtr)
#working
newX <- callEshotgun(Xtr, Ytr, c(-5,-1), c(5,1), 10L, 0.1)
testthat::expect_equal(
nrow(newX),
nrow(Xtr)
)
#working
testthat::expect_equal(
ncol(newX),
ncol(Xtr)
)
# Edit the Ytr-Matrix to provoke a error
Xtr <- matrix(runif(20),ncol=1)
Ytr <- modifiedLevy(Xtr)[1:8]
testthat::expect_equal(
callEshotgun(Xtr, Ytr, c(-5), c(5), 10L, 0.1),
NULL
)
# Edit the Ytr and Xtr-Matrix to recover the error
testthat::expect_equal(
callEshotgun(Xtr[1:8], Ytr, c(-5), c(5), 10L, 0.1),
NULL
)
Xtr[1:8]
# Edit the Ytr-Matrix to provoke a error
Xtr <- matrix(runif(20),ncol=1)
Ytr <- modifiedLevy(Xtr)[1:8]
testthat::expect_equal(
callEshotgun(Xtr, Ytr, c(-5), c(5), 10L, 0.1),
NULL
)
Xtr <- Xtr[1:8]
# Edit the Ytr and Xtr-Matrix to recover the error
testthat::expect_equal(
callEshotgun(Xtr, Ytr, c(-5), c(5), 10L, 0.1),
NULL
)
# Edit the Ytr-Matrix to provoke a error
Xtr <- matrix(runif(20),ncol=1)
Ytr <- modifiedLevy(Xtr)[1:8]
testthat::expect_equal(
callEshotgun(Xtr, Ytr, c(-5), c(5), 10L, 0.1),
NULL
)
Xtr <- Xtr[1:8]
# Edit the Ytr and Xtr-Matrix to recover the error
testthat::expect_equal(
callEshotgun(Xtr, Ytr, c(-5), c(5), 10L, 0.1),
NULL
)
callEshotgun(Xtr, Ytr, c(-5), c(5), 10L, 0.1)
Xtr <- Xtr[1:8]
Ytr <- Ytr[1:8]
# Edit the Ytr and Xtr-Matrix to recover the error
testthat::expect_equal(
callEshotgun(Xtr, Ytr, c(-5), c(5), 10L, 0.1),
NULL
)
Xtr <- matrix(runif(20),ncol=1)
Ytr <- modifiedLevy(Xtr)[1:15]
Xtr <- Xtr[1:10]
Ytr <- Ytr[1:10]
Xtr <- matrix(runif(20),ncol=1)
Ytr <- modifiedLevy(Xtr)[1:15]
Xtr <- Xtr[1:10]
Ytr <- Ytr[1:10]
# Edit the Ytr and Xtr-Matrix to recover the error
testthat::expect_equal(
callEshotgun(Xtr, Ytr, c(-5), c(5), 10L, 0.1),
NULL
)
Xtr <- Xtr[1:10]
Xtr[1:10]
Ytr[1:10]
matrix(runif(20),ncol=1)
Xtr <- matrix(runif(20),ncol=1)
Ytr <- modifiedLevy(Xtr)[1:15]
Xtr <- Xtr[1:10]
Ytr <- Ytr[1:10]
testthat::expect_equal(
callEshotgun(Xtr, Ytr, c(-5), c(5), 10L, 0.1),
NULL
)
Xtr <- matrix(runif(20),ncol=1)
Ytr <- modifiedLevy(Xtr)[1:15]
# Edit the Ytr and Xtr-Matrix to recover the error
testthat::expect_equal(
callEshotgun(Xtr, Ytr, c(-5), c(5), 10L, 0.1),
NULL
)
Xtr <- matrix(runif(20),ncol=2)
Ytr <- modifiedBranin(Xtr)
#working
newX <- callEshotgun(Xtr, Ytr, c(-5,-1), c(5,1), 10L, 0.1)
testthat::expect_equal(
nrow(newX),
nrow(Xtr)
)
#working
testthat::expect_equal(
ncol(newX),
ncol(Xtr)
)
Xtr <- matrix(runif(20),ncol=3)
Ytr <- modifiedBranin(Xtr)
newX <- callEshotgun(Xtr, Ytr, c(-5,-4,-3), c(5,6,7), 10L, 0.1)
testthat::expect_equal(
nrow(newX),
nrow(Xtr)
)
#working
testthat::expect_equal(
ncol(newX),
ncol(Xtr)
)
Xtr <- matrix(runif(20),ncol=2)
Ytr <- modifiedBranin(Xtr)
#working
newX <- callEshotgun(Xtr, Ytr, c(-5,-1), c(5,1), 10L, 0.1)
testthat::expect_equal(
nrow(newX),
nrow(Xtr)
)
#working
testthat::expect_equal(
ncol(newX),
ncol(Xtr)
)
Xtr <- matrix(runif(20),ncol=3)
Ytr <- modifiedBranin(Xtr)
newX <- callEshotgun(Xtr, Ytr, c(-5,-4,-3), c(5,6,7), 10L, 0.1)
testthat::expect_equal(
nrow(newX),
nrow(Xtr)
)
Xtr <- matrix(runif(20),ncol=3)
Ytr <- modifiedBranin(Xtr)
newX <- callEshotgun(Xtr, Ytr, c(-5,-4,-3), c(5,6,7), 10L, 0.1)
Xtr <- matrix(runif(20),ncol=3)
Ytr <- modifiedBranin(Xtr)
newX <- callEshotgun(Xtr, Ytr, c(-5,-4,-3), c(5,6,7), 10L, 0.1)
#working
testthat::expect_equal(
ncol(newX),
ncol(Xtr)
)
library(CallEshotgun)
